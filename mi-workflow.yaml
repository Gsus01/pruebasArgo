apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: pipeline-series-temporales-
spec:
  entrypoint: pipeline-completo
  volumeClaimTemplates:
  - metadata:
      name: workdir
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
  templates:
  - name: pipeline-completo
    dag:
      tasks:
      - name: crear-datos
        template: crear-datos
      - name: seleccionar-columnas
        dependencies: [crear-datos]
        template: seleccionar-columnas
        arguments:
          artifacts:
          - name: raw-data
            from: "{{tasks.crear-datos.outputs.artifacts.raw-data}}"
      - name: entrenar-modelo-a
        dependencies: [seleccionar-columnas]
        template: entrenar-modelo
        arguments:
          parameters:
          - name: model-name
            value: "a"
          artifacts:
          - name: selected-data
            from: "{{tasks.seleccionar-columnas.outputs.artifacts.selected-data}}"
      - name: entrenar-modelo-b
        dependencies: [seleccionar-columnas]
        template: entrenar-modelo
        arguments:
          parameters:
          - name: model-name
            value: "b"
          artifacts:
          - name: selected-data
            from: "{{tasks.seleccionar-columnas.outputs.artifacts.selected-data}}"
      - name: entrenar-modelo-c
        dependencies: [seleccionar-columnas]
        template: entrenar-modelo
        arguments:
          parameters:
          - name: model-name
            value: "c"
          artifacts:
          - name: selected-data
            from: "{{tasks.seleccionar-columnas.outputs.artifacts.selected-data}}"
      - name: generar-datos-a
        dependencies: [entrenar-modelo-a]
        template: generar-datos
        arguments:
          parameters:
          - name: model-name
            value: "a"
          artifacts:
          - name: model
            from: "{{tasks.entrenar-modelo-a.outputs.artifacts.model}}"
      - name: generar-datos-b
        dependencies: [entrenar-modelo-b]
        template: generar-datos
        arguments:
          parameters:
          - name: model-name
            value: "b"
          artifacts:
          - name: model
            from: "{{tasks.entrenar-modelo-b.outputs.artifacts.model}}"
      - name: generar-datos-c
        dependencies: [entrenar-modelo-c]
        template: generar-datos
        arguments:
          parameters:
          - name: model-name
            value: "c"
          artifacts:
          - name: model
            from: "{{tasks.entrenar-modelo-c.outputs.artifacts.model}}"

  - name: crear-datos
    outputs:
      artifacts:
      - name: raw-data
        path: /tmp/data/raw_data.csv
    container:
      image: pipeline-ts:0.1
      command: [python, 01_create_initial_data.py]
      args: ["--output", "/tmp/data/raw_data.csv"]
      volumeMounts:
      - name: workdir
        mountPath: /tmp/data

  - name: seleccionar-columnas
    inputs:
      artifacts:
      - name: raw-data
        path: /tmp/data/raw_data.csv
    outputs:
      artifacts:
      - name: selected-data
        path: /tmp/data/selected_data.csv
    container:
      image: pipeline-ts:0.1
      command: [python, 02_select_columns.py]
      args: ["--input", "/tmp/data/raw_data.csv", "--output", "/tmp/data/selected_data.csv"]
      volumeMounts:
      - name: workdir
        mountPath: /tmp/data

  - name: entrenar-modelo
    inputs:
      parameters:
      - name: model-name
      artifacts:
      - name: selected-data
        path: /tmp/data/selected_data.csv
    outputs:
      artifacts:
      - name: model
        path: /tmp/data/model-{{inputs.parameters.model-name}}.json
    container:
      image: pipeline-ts:0.1
      command: [python, 03_train_model.py]
      args: ["--input", "/tmp/data/selected_data.csv", "--output", "/tmp/data/model-{{inputs.parameters.model-name}}.json"]
      volumeMounts:
      - name: workdir
        mountPath: /tmp/data

  - name: generar-datos
    inputs:
      parameters:
      - name: model-name
      artifacts:
      - name: model
        path: /tmp/data/model-{{inputs.parameters.model-name}}.json
    container:
      image: pipeline-ts:0.1
      command: [python, 04_generate_data.py]
      args: ["--input", "/tmp/data/model-{{inputs.parameters.model-name}}.json", "--output", "/tmp/data/synthetic_data-{{inputs.parameters.model-name}}.csv"]
      volumeMounts:
      - name: workdir
        mountPath: /tmp/data
    outputs:
      artifacts:
      - name: synthetic-data
        path: /tmp/data/synthetic_data-{{inputs.parameters.model-name}}.csv
